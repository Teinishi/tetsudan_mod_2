<?xml version="1.0" encoding="UTF-8"?>
<definition name="(M)(TNS) Train Driver Seat Type 3" category="1" type="1" mass="3" value="50" flags="8192" tags="mod,tetsudan,train,basic,seat,control,pilot" mesh_data_name="m_tns_tetsudan_driver_seat_type3.mesh" mesh_0_name="meshes/component_pilot_seat_hat_headset.mesh" mesh_1_name="meshes/component_pilot_seat_hat_pilot.mesh" mesh_2_name="meshes/component_pilot_seat_hat_helmet.mesh" seat_pose="5" seat_health_per_sec="0">
	<surfaces>
		<surface orientation="0" shape="0">
			<position x="0" y="-1" z="0" />
		</surface>
		<surface orientation="1" shape="0">
			<position x="0" y="-1" z="0" />
		</surface>
		<surface orientation="3" shape="0">
			<position x="0" y="-1" z="0" />
		</surface>
		<surface orientation="5" shape="0">
			<position x="0" y="-1" z="0" />
		</surface>
	</surfaces>
	<logic_nodes>
		<logic_node orientation="0" label="Occupied" mode="0" type="0" description="Outputs an on signal if this seat is occupied by a character." flags="0">
			<position x="0" y="0" z="0" />
		</logic_node>
		<logic_node orientation="0" label="Trigger [$[action_trigger]]" mode="0" type="0" description="Outputs an on signal when [$[action_trigger]] is held, and off when it is not." flags="0">
			<position x="0" y="1" z="0" />
		</logic_node>
		<logic_node orientation="0" label="Look X" mode="0" type="1" description="Outputs the character look direction in turns along the X-axis." flags="0">
			<position x="-1" y="2" z="0" />
		</logic_node>
		<logic_node orientation="0" label="Look Y" mode="0" type="1" description="Outputs the character look direction in turns along the Y-axis." flags="0">
			<position x="1" y="2" z="0" />
		</logic_node>
		<logic_node orientation="0" label="Axis 1 [$[action_left]]/[$[action_right]]" mode="0" type="1" description="Outputs a standard value between -1 and 1, controlled using [$[action_left]] and [$[action_right]]. [$[action_left]] causes the output value to move towards -1, and [$[action_right]] moves it towards 1." flags="0">
			<position x="-1" y="1" z="0" />
		</logic_node>
		<logic_node orientation="0" label="Axis 2 [$[action_up]]/[$[action_down]]" mode="0" type="1" description="Outputs a standard value between -1 and 1, controlled using [$[action_up]] and [$[action_down]]. [$[action_down]] causes the output value to move towards -1, and [$[action_up]] moves it towards 1." flags="0">
			<position x="1" y="1" z="0" />
		</logic_node>
		<logic_node orientation="0" label="Axis 3 [$[action_pedal_left]]/[$[action_pedal_right]]" mode="0" type="1" description="Outputs a standard value between -1 and 1, controlled using [$[action_pedal_left]] and [$[action_pedal_right]]. [$[action_pedal_left]] causes the output value to move towards -1, and [$[action_pedal_right]] moves it towards 1." flags="0">
			<position x="-1" y="0" z="0" />
		</logic_node>
		<logic_node orientation="0" label="Axis 4 [$[action_throttle_up]]/[$[action_throttle_down]]" mode="0" type="1" description="Outputs a standard value between -1 and 1, controlled using [$[action_throttle_up]] and [$[action_throttle_down]]. [$[action_throttle_down]] causes the output value to move towards -1, and [$[action_throttle_up]] moves it towards 1." flags="0">
			<position x="1" y="0" z="0" />
		</logic_node>
		<logic_node orientation="0" label="Hotkey 1 [$[action_hotkey_1]]" mode="0" type="0" description="Outputs an on signal when [$[action_hotkey_1]] is held, and off when it is not." flags="0">
			<position x="-1" y="2" z="-1" />
		</logic_node>
		<logic_node orientation="0" label="Hotkey 2 [$[action_hotkey_2]]" mode="0" type="0" description="Outputs an on signal when [$[action_hotkey_2]] is held, and off when it is not." flags="0">
			<position x="-1" y="1" z="-1" />
		</logic_node>
		<logic_node orientation="0" label="Hotkey 3 [$[action_hotkey_3]]" mode="0" type="0" description="Outputs an on signal when [$[action_hotkey_3]] is held, and off when it is not." flags="0">
			<position x="-1" y="0" z="-1" />
		</logic_node>
		<logic_node orientation="0" label="Hotkey 4 [$[action_hotkey_4]]" mode="0" type="0" description="Outputs an on signal when [$[action_hotkey_4]] is held, and off when it is not." flags="0">
			<position x="1" y="2" z="-1" />
		</logic_node>
		<logic_node orientation="0" label="Hotkey 5 [$[action_hotkey_5]]" mode="0" type="0" description="Outputs an on signal when [$[action_hotkey_5]] is held, and off when it is not." flags="0">
			<position x="1" y="1" z="-1" />
		</logic_node>
		<logic_node orientation="0" label="Hotkey 6 [$[action_hotkey_6]]" mode="0" type="0" description="Outputs an on signal when [$[action_hotkey_6]] is held, and off when it is not." flags="0">
			<position x="1" y="0" z="-1" />
		</logic_node>
		<logic_node orientation="0" label="Seat data" mode="0" type="5" description="Outputs the axis, hotkey and occupied data from the seat. (On/Off 1+ : Hotkeys) (On/Off 31 : Trigger) (On/Off 32 : Occupied) (Value 1 : [$[action_left]]/[$[action_right]]) (Value 2 : [$[action_up]]/[$[action_down]]) (Value 3 : [$[action_pedal_left]]/[$[action_pedal_right]]) (Value 4 : [$[action_throttle_up]]/[$[action_throttle_down]]) (Value 9 : Look X)  (Value 10 : Look Y)" flags="0">
			<position x="0" y="0" z="0" />
		</logic_node>
		<logic_node orientation="0" label="Headset Audio" mode="0" type="7" description="" flags="0">
			<position x="-1" y="2" z="0" />
		</logic_node>
		<logic_node orientation="0" label="Headset Audio" mode="1" type="7" description="" flags="0">
			<position x="1" y="2" z="0" />
		</logic_node>
		<logic_node orientation="0" label="Headset Video" mode="1" type="6" description="Displays video UI overlay on a helmet mounted display." flags="0">
			<position x="1" y="2" z="0" />
		</logic_node>
	</logic_nodes>
	<couplings />
	<voxels>
		<voxel flags="1">
			<position x="0" y="-1" z="0" />
		</voxel>

		<voxel flags="0">
			<position x="-1" y="0" z="0" />
		</voxel>
		<voxel flags="2">
			<position x="0" y="0" z="0" />
		</voxel>
		<voxel flags="0">
			<position x="1" y="0" z="0" />
		</voxel>
		<voxel flags="0">
			<position x="-1" y="0" z="-1" />
		</voxel>
		<voxel flags="2">
			<position x="0" y="0" z="-1" />
		</voxel>
		<voxel flags="0">
			<position x="1" y="0" z="-1" />
		</voxel>

		<voxel flags="0">
			<position x="-1" y="1" z="0" />
		</voxel>
		<voxel flags="2">
			<position x="0" y="1" z="0" />
		</voxel>
		<voxel flags="0">
			<position x="1" y="1" z="0" />
		</voxel>
		<voxel flags="0">
			<position x="-1" y="1" z="-1" />
		</voxel>
		<voxel flags="2">
			<position x="0" y="1" z="-1" />
		</voxel>
		<voxel flags="0">
			<position x="1" y="1" z="-1" />
		</voxel>

		<voxel flags="0">
			<position x="-1" y="2" z="0" />
		</voxel>
		<voxel flags="0">
			<position x="0" y="2" z="0" />
		</voxel>
		<voxel flags="0">
			<position x="1" y="2" z="0" />
		</voxel>
		<voxel flags="0">
			<position x="-1" y="2" z="-1" />
		</voxel>
		<voxel flags="0">
			<position x="0" y="2" z="-1" />
		</voxel>
		<voxel flags="0">
			<position x="1" y="2" z="-1" />
		</voxel>
	</voxels>
	<voxel_min x="-1" y="-1" z="-1" />
	<voxel_max x="1" y="2" z="0" />
	<voxel_physics_min x="-1" y="-1" z="-1" />
	<voxel_physics_max x="1" y="1" z="0" />
	<seat_offset x="0" y="0.38" z="0.125" />
	<seat_front x="0" y="0" z="1" />
	<seat_up x="0" y="1" z="0" />
	<seat_camera x="0" y="-0.9" z="1" />
	<seat_render x="0" y="-0.85" z="-0.22" />
	<tooltip_properties description="It provides 4 number outputs that produce a standard value ranging from -1 to 1, and 6 on/off outputs. You can get in and out of the compact pilot seat by interacting with it using [$[action_use_seat]]." short_description="The compact pilot seat lets you translate keyboard presses into output signals that can control logic components." />
</definition>
